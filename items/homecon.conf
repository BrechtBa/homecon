######################################################################################
#    Copyright 2015 Brecht Baeten
#    This file is part of HomeCon.
#
#    HomeCon is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    HomeCon is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with HomeCon.  If not, see <http://www.gnu.org/licenses/>.
######################################################################################

# File containing required items for homecon to work

[homecon]	
######################################################################################
	[[weather]]
		homeconitem = 'weather'
		[[[current]]]
			[[[[temperature]]]]	
				type = num
				sh_listen = 'sh.outside.measurements.temperature()'

			[[[[humidity]]]]	
				type = num
				sh_listen = ''

			[[[[irradiation]]]]
				[[[[[sensor]]]]]
					homeconitem = 'irradiationsensor'
					type = num
					sh_listen = 'sh.outside.measurements.lightstrength()/127'
					orientation = 175
					tilt = 10
	
				[[[[[horizontal]]]]]
					homeconitem = 'horizontal_irradiation'
					type = num

				[[[[[clouds]]]]]
					homeconitem = 'clouds'
					type = num
						
			[[[[precipitation]]]]	
				type = num
				sh_listen = 'sh.outside.measurements.rain()'

			[[[[wind]]]]	
				[[[[[speed]]]]]
					type = num
					sh_listen = 'sh.outside.measurements.windspeed()'
				[[[[[direction]]]]]
					type = num
					sh_listen = ''

		[[[prediction]]]
			[[[[detailed]]]]
				homeconitem = 'weatherforecast_detailed'
				type = list

			[[[[daily]]]]
				homeconitem = 'weatherforecast_daily'
				type = list
						
######################################################################################
	[[energy]]
		[[[electricity]]]
			type = num
			sh_listen = 'sh.flukso.electricity_total()'
			quantity = 'Power'
			unit = 'W'
			
		[[[gas]]]
			type = num
			sh_listen = 'sh.flukso.gas()'
			quantity = 'Power'
			unit = 'W'
	
		[[[water]]]
			type = num
			sh_listen = ''
			quantity = 'Flow'
			unit = 'l/min'
			
######################################################################################
	[[ventilation]]
		[[[main]]]
			[[[[fanspeed]]]]
				type = num
				sh_send = ''
	
			[[[[heatrecovery]]]]
				type = num
				sh_send = ''

######################################################################################
	[[heat_production]]
		[[[heatpump]]]
			systemtype = 'heatpump'
			[[[[power]]]]
				type = num
				sh_listen = 'sh.flukso.electricity_heating()'
			[[[[setpoint]]]]
				type = num
				sh_listen = ''
				sh_send = ''
		[[[gasboiler]]]
			systemtype = 'condensing gas boiler'
			[[[[power]]]]
				type = num
				sh_listen = 'sh.flukso.gas()'
			[[[[setpoint]]]]
				type = num
				sh_listen = ''
				sh_send = ''

######################################################################################
	[[electricity_production]]
#			[[[pv]]]
#				systemtype = 'pv'
#				[[[[power]]]]
#					type = num
#					sh_listen = ''
#					eval = value
#				[[[[setpoint]]]]
#					type = num
#					sh_listen = ''

######################################################################################
	[[mpc]]
		[[[model]]]
			[[[[identification]]]]
				type = bool
				visu_acl = rw
				[[[[[result]]]]]
					type = dict

			[[[[validation]]]]
				type = bool
				visu_acl = rw
				[[[[[result]]]]]
					type = dict






